name: Build - Windows

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "src/**"
      - ".github/workflows/build-windows.yml"
  merge_group:
  push:
    paths:
      - "src/**"
      - ".github/workflows/build-windows.yml"
    branches:
      - main

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: "-j 2"

jobs:
  cancel-runs:
    if: github.event_name == 'pull_request' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@main
        with:
          access_token: ${{ github.token }}

  build:
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}

    concurrency:
      group: otclient-${{ github.workflow }}-${{ github.ref }}-${{ matrix.buildtype }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]
        buildtype: [windows-release, windows-debug]
        include:
          - os: windows-2022
            triplet: x64-windows-static
            packages: sccache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: CCache with SCCACHE
        uses: hendrikmuhs/ccache-action@main
        with:
          max-size: "1G"
          variant: "sccache"
          key: ccache-${{ matrix.os }}-${{ matrix.buildtype }}
          restore-keys: |
            ccache-${{ matrix.os }}-${{ matrix.buildtype }}

      - name: Remove Windows pre-installed MySQL (for clean builds)
        run: Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "C:/mysql*"

      - name: Extract vcpkg commit ID
        id: vcpkg-step
        shell: pwsh
        run: |
          $json = Get-Content vcpkg.json -Raw | ConvertFrom-Json
          $commit = $json.'builtin-baseline'
          "VCPKG_GIT_COMMIT_ID=$commit" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Cache vcpkg installed packages
        uses: actions/cache@v4
        with:
          path: build/vcpkg_installed
          key: vcpkg-installed-${{ matrix.os }}-${{ matrix.buildtype }}-${{ env.VCPKG_GIT_COMMIT_ID }}
          restore-keys: |
            vcpkg-installed-${{ matrix.os }}-${{ matrix.buildtype }}-

      - name: Install vcpkg with baseline
        uses: lukka/run-vcpkg@main
        with:
          vcpkgGitURL: "https://github.com/microsoft/vcpkg.git"
          vcpkgGitCommitId: ${{ env.VCPKG_GIT_COMMIT_ID }}

      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@main

      - name: Install Ninja
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: install ninja --no-progress

      - name: Run CMake Preset
        uses: lukka/run-cmake@main
        with:
          configurePreset: ${{ matrix.buildtype }}
          buildPreset: ${{ matrix.buildtype }}

      - name: Upload Executable Artifact
        uses: actions/upload-artifact@main
        with:
          name: otclient-${{ matrix.os }}-${{ matrix.buildtype }}-${{ github.sha }}
          path: |
            ${{ github.workspace }}/build/${{ matrix.buildtype }}/bin/otclient.exe

      - name: Upload DLLs
        uses: actions/upload-artifact@main
        with:
          name: otclient-dlls-${{ matrix.os }}-${{ matrix.buildtype }}-${{ github.sha }}
          path: |
            ${{ github.workspace }}/build/${{ matrix.buildtype }}/bin/*.dll
